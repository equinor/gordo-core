#!/bin/bash

set -e

function usage {
    echo "Usage: $0 [OPTIONS]..."
    echo "Compare provided version with the version in pyproject.toml file. Exit with code 1 if versions differ. "
    echo "Also, this script can store the current version to a python file as \"version\" variable"
    echo ""
    echo "  -v  provided version"
    echo "  -p  python file for storing version"
    echo "  -h  display this help and exit"
    exit $1
}

while getopts "v:p:h" opt; do
  case "$opt" in
    h)
        usage 0
        ;;
    v)
        version=${OPTARG}
        ;;
    p)
        python_file=${OPTARG}
        ;;
  esac
done

if [ -z "$version" ]; then
    usage 1
fi

function check_version {
    grep "^version = \"*\"" pyproject.toml | grep $1 > /dev/null
}

function store_version {
    store_version=$1
    store_file=$2
    echo "# coding: utf-8" > $store_file
    echo "# file generated by $0" >> $store_file
    echo "version = \"${store_version}\"" >> $store_file
}

package_version=${version#"v"}
if check_version "$package_version"; then
    echo "$version is a valid version"
    if [ -n "$python_file" ]; then
        store_version "$package_version" "$python_file"
    fi
else
    echo "$version is not a valid version" 1>&2
    exit 1
fi
